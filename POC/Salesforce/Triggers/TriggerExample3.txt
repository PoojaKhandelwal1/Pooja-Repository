trigger FeedCommentTrigger1 on FeedComment (before insert, after insert, before update, after update) {
    
    if(Trigger.isBefore && Trigger.isInsert) {
        
        Set<String> caseIdSet = new Set<String>();
        
        for(FeedComment obj: Trigger.new) {
            caseIdSet.add(obj.ParentId);   
        }  
        
        Map<String, Case> caseList = new Map<String, Case>([select Id, CaseNumber, Status from Case where Id IN :caseIdSet]);
        
        Map<String, List<CaseFeed>> feedItemsListMap= new Map<String, List<CaseFeed>>();
         
        
        List<CaseFeed> feedItemsList =  [select ParentId, Body from CaseFeed where ParentId IN :caseIdSet];
       
         
        Integer Count = 0;
        List<Case> caseListToUpdate = new List<Case>();
        for(String caseId: caseIdSet)    {
            for(CaseFeed feedItemObj: feedItemsList)    {
                
               // feedItemsListMap.put(feedItemObj.ParentId, feedItemObj);
                
                if(feedItemObj.ParentId == caseId && feedItemObj.Body != null && feedItemObj.Body.contains('This feed item is generated by mail') && caseList.get(caseId).Status.contains('New'))    {
                   caseList.get(caseId).Status = 'Closed'; 
                   caseListToUpdate.add(caseList.get(caseId));
                   break;
                }    
            }
            count++;
        }
        
        update caseListToUpdate;
    }  
}